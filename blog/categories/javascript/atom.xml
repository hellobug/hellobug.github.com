<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | Hello Bug~]]></title>
  <link href="http://hellobug.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://hellobug.github.com/"/>
  <updated>2013-03-31T15:26:52+08:00</updated>
  <id>http://hellobug.github.com/</id>
  <author>
    <name><![CDATA[hellobug]]></name>
    <email><![CDATA[joy.xczhang+hellobug@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[JS] 让人犯晕的Javascript变量赋值]]></title>
    <link href="http://hellobug.github.com/blog/javascript-variable-assignment/"/>
    <updated>2013-01-27T23:17:00+08:00</updated>
    <id>http://hellobug.github.com/blog/javascript-variable-assignment</id>
    <content type="html"><![CDATA[<h1>变量赋值</h1>

<p>开始之前先来几个例子，确保起始点是晕的状态～ :P</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.1 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;banana&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>按理说，b = a后，a是啥值b就应该跟着是啥值了~<br/>
但，<code>b</code>结果是<code>"apple"</code>，还是一开始赋值时a的值。</p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.2 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="s2">&quot;banana&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这回，b又不争气的跟着a变了，<code>b.name</code>结果是<code>"banana"</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;banana&quot;</span><span class="p">};</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这回b又坚持自己了，<code>b.name</code>结果是<code>"apple"</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">count</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>同样<code>b</code>的结果还是最开始的<code>2</code>，b到底是要闹哪样？！<img src="/my-images/emotions/xianzhuozi.jpg"></p>

<p>======================开始解释的分割线==============================</p>

<p>其实b很无辜，这个要从ECMAScript的变量值类型说起~</p>

<p>类型共有两种：</p>

<ul>
<li><strong>基本类型 (primitive values)</strong> - 包括Undefined, Null, Boolean, Number和String五种基本数据类型</li>
<li><strong>引用类型 (reference values)</strong> - 保存在内存中的对象们，不能直接操作，只能通过保存在变量中的地址引用对其进行操作</li>
</ul>


<p>现在回来看第一个例子<code>例1.1</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>"apple"</code>是String类型，属于基本类型，这时值是这样储存的：</p>

<p><img src="/my-images/javascript-variable-assignment-1-1.png"></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这时a的值被copy了一份赋给了b：</p>

<p><img src="/my-images/javascript-variable-assignment-1-2.png"></p>

<p>所以，从此a和b井水不犯河水，各自怎么修改都不会影响对方了~</p>

<p>再来看第二个例子<code>例1.2</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>{name: "apple"}</code>是一个Object，属于引用类型，赋值前后值是这样存储的：</p>

<p><img src="/my-images/javascript-variable-assignment-1-3.png"></p>

<p>所以当<code>a.name = "banana";</code>时，修改的是大家共同指向的内存中的object的属性值，所以<code>b.name</code>的值也就跟着变了。</p>

<p><code>例1.3</code>中，</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;banana&quot;</span><span class="p">};</span>
</span><span class='line'><span class="c1">// {name: &quot;banana&quot;} 是内存中的一个新的Object了，</span>
</span><span class='line'><span class="c1">// a变量存储的地址也是指向这个新的Object的了，所以和b又无关了</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span> <span class="c1">//还是&quot;apple&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>例1.4</code>中，</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例1.4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>
</span><span class='line'><span class="c1">// a.count是String类型，所以值被copy给b，</span>
</span><span class='line'><span class="c1">// 从此再怎么修改与b无关了</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">count</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span> <span class="c1">//还是2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>小总结，变量赋值时总是会copy一份的，如果是基本类型，copy的就是实际的值，如果是引用类型，copy的是指向Object的地址值，所以指向的还是同一个Object。</strong></p>

<hr />

<h1>变量比较</h1>

<p>顺手再来看看变量的比较~</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例2.1 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">==</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这个没问题，结果肯定是<code>true</code>。</p>

<p>那这个呢？</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>例2.2 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;apple&quot;</span><span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;apple&quot;</span><span class="p">];</span>
</span><span class='line'><span class="nx">a</span> <span class="o">==</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>虽然俩数组长一模一样，结果还是<code>false</code>。</p>

<p>其实原理还是一样，<strong>对于基本类型，比较的就是实际的值，而对于引用类型（Array也是一种Object），比较的是地址值</strong>，虽然两个数组内容是一样的，但它们在内存中是两个Object，地址是不一样，所以比较的结果是<code>false</code>。</p>
]]></content>
  </entry>
  
</feed>
