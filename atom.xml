<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hello Bug~]]></title>
  <link href="http://hellobug.github.com/atom.xml" rel="self"/>
  <link href="http://hellobug.github.com/"/>
  <updated>2013-03-31T15:26:52+08:00</updated>
  <id>http://hellobug.github.com/</id>
  <author>
    <name><![CDATA[hellobug]]></name>
    <email><![CDATA[joy.xczhang+hellobug@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[JS] 让人犯晕的Javascript变量赋值]]></title>
    <link href="http://hellobug.github.com/blog/javascript-variable-assignment/"/>
    <updated>2013-01-27T23:17:00+08:00</updated>
    <id>http://hellobug.github.com/blog/javascript-variable-assignment</id>
    <content type="html"><![CDATA[<h1>变量赋值</h1>

<p>开始之前先来几个例子，确保起始点是晕的状态～ :P</p>

<figure class='code'><figcaption><span>例1.1 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;banana&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>按理说，b = a后，a是啥值b就应该跟着是啥值了~<br/>
但，<code>b</code>结果是<code>"apple"</code>，还是一开始赋值时a的值。</p>

<!-- more -->




<figure class='code'><figcaption><span>例1.2 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="s2">&quot;banana&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>这回，b又不争气的跟着a变了，<code>b.name</code>结果是<code>"banana"</code></p>

<figure class='code'><figcaption><span>例1.3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;banana&quot;</span><span class="p">};</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>这回b又坚持自己了，<code>b.name</code>结果是<code>"apple"</code></p>

<figure class='code'><figcaption><span>例1.4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">count</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>同样<code>b</code>的结果还是最开始的<code>2</code>，b到底是要闹哪样？！<img src="http://hellobug.github.com/my-images/emotions/xianzhuozi.jpg"></p>

<p>======================开始解释的分割线==============================</p>

<p>其实b很无辜，这个要从ECMAScript的变量值类型说起~</p>

<p>类型共有两种：</p>

<ul>
<li><strong>基本类型 (primitive values)</strong> - 包括Undefined, Null, Boolean, Number和String五种基本数据类型</li>
<li><strong>引用类型 (reference values)</strong> - 保存在内存中的对象们，不能直接操作，只能通过保存在变量中的地址引用对其进行操作</li>
</ul>


<p>现在回来看第一个例子<code>例1.1</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>"apple"</code>是String类型，属于基本类型，这时值是这样储存的：</p>

<p><img src="http://hellobug.github.com/my-images/javascript-variable-assignment-1-1.png"></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这时a的值被copy了一份赋给了b：</p>

<p><img src="http://hellobug.github.com/my-images/javascript-variable-assignment-1-2.png"></p>

<p>所以，从此a和b井水不犯河水，各自怎么修改都不会影响对方了~</p>

<p>再来看第二个例子<code>例1.2</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>{name: "apple"}</code>是一个Object，属于引用类型，赋值前后值是这样存储的：</p>

<p><img src="http://hellobug.github.com/my-images/javascript-variable-assignment-1-3.png"></p>

<p>所以当<code>a.name = "banana";</code>时，修改的是大家共同指向的内存中的object的属性值，所以<code>b.name</code>的值也就跟着变了。</p>

<p><code>例1.3</code>中，</p>

<figure class='code'><figcaption><span>例1.3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;apple&quot;</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;banana&quot;</span><span class="p">};</span>
</span><span class='line'><span class="c1">// {name: &quot;banana&quot;} 是内存中的一个新的Object了，</span>
</span><span class='line'><span class="c1">// a变量存储的地址也是指向这个新的Object的了，所以和b又无关了</span>
</span><span class='line'><span class="nx">b</span><span class="p">.</span><span class="nx">name</span> <span class="c1">//还是&quot;apple&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>例1.4</code>中，</p>

<figure class='code'><figcaption><span>例1.4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>
</span><span class='line'><span class="c1">// a.count是String类型，所以值被copy给b，</span>
</span><span class='line'><span class="c1">// 从此再怎么修改与b无关了</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">count</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="nx">b</span> <span class="c1">//还是2</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>小总结，变量赋值时总是会copy一份的，如果是基本类型，copy的就是实际的值，如果是引用类型，copy的是指向Object的地址值，所以指向的还是同一个Object。</strong></p>

<hr />

<h1>变量比较</h1>

<p>顺手再来看看变量的比较~</p>

<figure class='code'><figcaption><span>例2.1 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="s2">&quot;apple&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">a</span> <span class="o">==</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个没问题，结果肯定是<code>true</code>。</p>

<p>那这个呢？</p>

<figure class='code'><figcaption><span>例2.2 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;apple&quot;</span><span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;apple&quot;</span><span class="p">];</span>
</span><span class='line'><span class="nx">a</span> <span class="o">==</span> <span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>虽然俩数组长一模一样，结果还是<code>false</code>。</p>

<p>其实原理还是一样，<strong>对于基本类型，比较的就是实际的值，而对于引用类型（Array也是一种Object），比较的是地址值</strong>，虽然两个数组内容是一样的，但它们在内存中是两个Object，地址是不一样，所以比较的结果是<code>false</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Powershell里的单引号君和双引号君]]></title>
    <link href="http://hellobug.github.com/blog/powershell-quotes-rule/"/>
    <updated>2012-10-26T22:38:00+08:00</updated>
    <id>http://hellobug.github.com/blog/powershell-quotes-rule</id>
    <content type="html"><![CDATA[<p>Powershell里怎么使用单引号君<code>'</code>和双引号君<code>"</code>及单引号君的弟弟反单引号君<code>`</code>呢？</p>

<!-- more -->


<h3>规则1. 单引号（所见即所得）</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Write-Host <span class="s1">&#39;haha&#39;</span>
</span><span class='line'><span class="c"># haha</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> 2
</span><span class='line'>Write-Host <span class="s1">&#39;1 + 1 = $a&#39;</span>
</span><span class='line'><span class="c"># 1 + 1 = $a</span>
</span></code></pre></td></tr></table></div></figure>


<h3>规则2. 双引号（代换内部变量）</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Write-Host <span class="s2">&quot;haha&quot;</span>
</span><span class='line'><span class="c"># haha</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> 2
</span><span class='line'>Write-Host <span class="s2">&quot;1 + 1 = $a&quot;</span>
</span><span class='line'><span class="c"># 1 + 1 = 2</span>
</span></code></pre></td></tr></table></div></figure>


<h3>规则3. 反单引号（取消变量代换，转义字符，换行连接符）</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#取消变量代换</span>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> 2
</span><span class='line'>Write-Host <span class="s2">&quot;1 + 1 = `$a&quot;</span>
</span><span class='line'><span class="c"># 1 + 1 = $a</span>
</span><span class='line'>
</span><span class='line'><span class="c">#转义字符</span>
</span><span class='line'>Write-Host <span class="s2">&quot;I said: `&quot;</span>Hello Bug~<span class="sb">`</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c"># I said: &quot;Hello Bug~&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#换行连接符</span>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> 1 + <span class="sb">`</span>
</span><span class='line'>2
</span><span class='line'>Write-Host <span class="nv">$a</span>
</span><span class='line'><span class="c"># 3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>规则4. 想输出，写两遍</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#双引号里的单引号，单引号里的双引号，都直接写就可以输出了</span>
</span><span class='line'>Write-Host <span class="s2">&quot;ha&#39;ha&quot;</span>
</span><span class='line'><span class="c"># ha&#39;ha</span>
</span><span class='line'>Write-Host <span class="s1">&#39;ha&quot;ha&#39;</span>
</span><span class='line'><span class="c"># ha&quot;ha</span>
</span><span class='line'>
</span><span class='line'><span class="c">#双引号里的双引号，单引号里的单引号，写两遍就可以输出了</span>
</span><span class='line'>Write-Host <span class="s2">&quot;ha&quot;&quot;ha&quot;</span>
</span><span class='line'><span class="c"># ha&quot;ha</span>
</span><span class='line'>Write-Host <span class="s1">&#39;ha&#39;&#39;ha&#39;</span>
</span><span class='line'><span class="c"># ha&#39;ha</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Github Pages + Octopress 搭建篇] - Geek般的写博客呦~]]></title>
    <link href="http://hellobug.github.com/blog/github-pages-and-octopress-blog-setup/"/>
    <updated>2012-08-24T01:31:00+08:00</updated>
    <id>http://hellobug.github.com/blog/github-pages-and-octopress-blog-setup</id>
    <content type="html"><![CDATA[<p>一个偶然发现了<a href="http://octopress.org/">Octopress</a>，研究了一下发现真的很有意思~ 其实原理呢就是<a href="http://pages.github.com/">Github pages</a>提供了存储静态页面的空间域名和<a href="https://github.com/mojombo/jekyll">Jekyll</a>（Blog生成工具），支持Markdown格式，而Octopress呢又把Jekyll包装了一下，使用起来更方便，更可以专注在内容上啦~ 好了，开始吧~</p>

<!-- more -->


<h2>1. 准备Github Pages</h2>

<p>首先，得有个github账户（假设你用户名是xiaoming），在里面创建一个Repository，名字一定要是<code>xiaoming.github.com</code>，你才能用<code>xiaoming.github.com</code>的域名去访问你的blog~</p>

<p>然后，在你Repository的<code>Admin</code>里，左边选<code>Option</code>，右边会看到<code>Github Pages</code>的项，点击<code>Automatic Page Generator</code>按钮到下一页后，直接点击最下面的<code>Continue to Layouts</code>，到达选择模板页，不用选择，一会儿会被Octopress的模板替换掉，直接点击<code>PUBLIS</code>按钮就发布成功了，等一段时间就能生效啦~</p>

<h2>2. 准备本地环境</h2>

<p>官方的搭建说明文档在<a href="http://octopress.org/docs/setup/">这里</a>。</p>

<p>由于工作和游戏的种种原因，我使用的“2B青年必备”的Mac下的Win7。。。-_-</p>

<h4>a) Git</h4>

<p>安装<a href="http://git-scm.com/downloads">Git</a></p>

<h4>b) Ruby</h4>

<p>安装<a href="http://rubyforge.org/frs/?group_id=167">RubyInstaller</a> （>=1.9.2）</p>

<h4>c) Gem</h4>

<p>安装<a href="http://rubyinstaller.org/downloads/">DevKit</a><br/>
然后在命令行执行：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>path-to-devkit
</span><span class='line'>ruby dk.rb init
</span><span class='line'>ruby dk.rb instal
</span></code></pre></td></tr></table></div></figure>


<p><em>or</em></p>

<h4>前三步可替换为RailsInstaller</h4>

<p>安装<a href="http://railsinstaller.org/">RailsInstaller</a> (包括了Ruby，Git，Gem)</p>

<h4>d) python</h4>

<p>安装<a href="http://www.python.org/getit/">Python</a>，因为代码高亮系统是基于Python编写的。</p>

<h2>3. 更改本地配置</h2>

<h4>a) 中文utf-8编码的支持</h4>

<p>在环境变量里设置<code>LANG=zh_CN.UTF-8</code>，<code>LC_ALL=zh_CN.UTF-8</code></p>

<h4>b) 把gem的更新源改为taobao，因为官方的更新源总是被河蟹-_-</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem sources --remove http://rubygems.org/
</span><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -l <span class="c">#这里的输出要确保只有taobao一个源</span>
</span></code></pre></td></tr></table></div></figure>


<h4>c) 安装rdoc和bundler</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install rdoc bundler
</span></code></pre></td></tr></table></div></figure>


<h2>4. 安装Octopress</h2>

<p>找个合适的目录，执行下面的命令</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># clone octopress代码</span>
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>
</span><span class='line'><span class="c"># 修改octopress的gem源</span>
</span><span class='line'>vi Gemfile <span class="c"># 或notepad Gemfile</span>
</span><span class='line'>将行: <span class="nb">source</span> <span class="s2">&quot;http://rubygems.org/&quot;</span>
</span><span class='line'>改为: <span class="nb">source</span> <span class="s2">&quot;http://ruby.taobao.org/&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 安装octopress所需的gem组件</span>
</span><span class='line'>bundle install
</span><span class='line'>
</span><span class='line'><span class="c"># 安装默认主题</span>
</span><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<h2>5. 关联Github Pages</h2>

<h4>a) 与Github建立连接</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake setup_github_pages
</span><span class='line'><span class="c"># 按照提示输入Github Pages Repository的url地址，如：git@github.com:xiaoming/xiaoming.github.com.git</span>
</span><span class='line'><span class="c"># 这时创建了一个githug分支用来保存source文件</span>
</span></code></pre></td></tr></table></div></figure>


<h4>b) 更新blog配置文件</h4>

<p>更新配置文件<code>octopress/_config.yml</code>，可参考<a href="http://octopress.org/docs/configuring/">官网说明</a>。
这里就可以给blog起标题副标题神马的了~</p>

<h4>c) 生成静态页面</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<h4>d) 本地预览</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake preview
</span><span class='line'><span class="c"># 可以访问http://localhost:4000查看博客本地效果</span>
</span></code></pre></td></tr></table></div></figure>


<h4>e) 发送到github上</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake deploy
</span><span class='line'><span class="c"># 可以访问http://xiaoming.github.com查看实际效果</span>
</span></code></pre></td></tr></table></div></figure>


<h4>f) 保存source文件到github source分支上</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;xiaoming blog source&quot;</span>
</span><span class='line'><span class="c"># 这里如果要pull，一定要从分支pull</span>
</span><span class='line'><span class="c"># git pull origin source</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<h2>6. 开始写博客啦。。。终于。。。</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 创建新页面</span>
</span><span class='line'>rake new_page<span class="o">[</span><span class="s2">&quot;page name&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c"># 创建新博文</span>
</span><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;blog title&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>官方说明在<a href="http://octopress.org/docs/blogging/">这里</a></p>

<h4>然后。。。就没有然后了。。。才怪。。。改天继续总结。。。</h4>

<h4>^_^</h4>
]]></content>
  </entry>
  
</feed>
